-- 20.12.2018 08:14:13 MH V1.0a
-- 10.01.2019 09:10:08 MH V1.0b

block.setSize(200, 51)

generic = {
  name = 'LVQProcessing',
  parameter = {
  },

  init = function(self)
    block.setInputsPinCount(2)
    block.setOutputsPinCount(1)
    block.setInputPinTypeRestrains(1, 'table')
    block.setInputPinName(1, 'Data')
    block.setInputPinTypeRestrains(2, 'table')
    block.setInputPinName(2, 'WV')
    block.setOutputPinTypeRestrains(1, 'table')
    block.setOutputPinName(1, 'Class')
    block.modifyFlags('SupressStartFunctionCall', true)
    block.modifyFlags('SupressStopFunctionCall', true)
  end,

  open = function(self)
    gui.add('Info', 'Info', self.name, "Procced the LVQ Algorithmus")
    gui.setSize()
  end,

  apply = function(self)
  end,


  close = function()
  end,

  avatar = function(self)
    return block.getDefaultAvatar(0x00, '"'..self.name..'"')
  end,

  generate = function(self)
    local source =
      [==[
        local block = {}

         block.distance = function(a,b)
            local dist = 0.0
            for i = 1, #a do
              dist = dist + (a[i] - b[i+1]) ^2
            end

            return math.sqrt(dist)
         end


         block.step = function(a,b)

            local d = math.huge
            local class

            for _,x in ipairs(b) do
                dist = block.distance(a,x)
                if dist < d then
                   class,d = x[1],dist
                end
             end

             return class


         end

        return block

      ]==]
    local replaces = {
    }
    return string.gsub(source, '%a+', replaces)
  end,

}

